import{_ as a,c as i,a1 as l,o as t}from"./chunks/framework.DpGibytC.js";const m=JSON.parse('{"title":"Node.js Backend Development","description":"Comprehensive guide to building scalable backend applications with Node.js","frontmatter":{"title":"Node.js Backend Development","description":"Comprehensive guide to building scalable backend applications with Node.js"},"headers":[],"relativePath":"en/tech/backend/nodejs/index.md","filePath":"en/tech/backend/nodejs/index.md"}'),o={name:"en/tech/backend/nodejs/index.md"};function n(r,e,s,d,c,u){return t(),i("div",null,e[0]||(e[0]=[l('<h1 id="node-js-backend-development" tabindex="-1">Node.js Backend Development <a class="header-anchor" href="#node-js-backend-development" aria-label="Permalink to &quot;Node.js Backend Development&quot;">​</a></h1><h2 id="introduction-to-node-js" tabindex="-1">Introduction to Node.js <a class="header-anchor" href="#introduction-to-node-js" aria-label="Permalink to &quot;Introduction to Node.js&quot;">​</a></h2><p>Node.js is a powerful, event-driven runtime environment that allows developers to build scalable network applications using JavaScript on the server-side.</p><h2 id="core-concepts" tabindex="-1">Core Concepts <a class="header-anchor" href="#core-concepts" aria-label="Permalink to &quot;Core Concepts&quot;">​</a></h2><h3 id="event-driven-architecture" tabindex="-1">Event-Driven Architecture <a class="header-anchor" href="#event-driven-architecture" aria-label="Permalink to &quot;Event-Driven Architecture&quot;">​</a></h3><ul><li>Non-blocking I/O</li><li>Single-threaded event loop</li><li>Asynchronous programming</li><li>Callbacks, Promises, Async/Await</li></ul><h3 id="module-system" tabindex="-1">Module System <a class="header-anchor" href="#module-system" aria-label="Permalink to &quot;Module System&quot;">​</a></h3><ul><li>CommonJS vs ES Modules</li><li>NPM (Node Package Manager)</li><li>Dependency management</li><li>Creating and publishing packages</li></ul><h2 id="popular-frameworks" tabindex="-1">Popular Frameworks <a class="header-anchor" href="#popular-frameworks" aria-label="Permalink to &quot;Popular Frameworks&quot;">​</a></h2><h3 id="express-js" tabindex="-1">Express.js <a class="header-anchor" href="#express-js" aria-label="Permalink to &quot;Express.js&quot;">​</a></h3><ul><li>Minimal and flexible</li><li>Routing</li><li>Middleware support</li><li>REST API development</li></ul><h3 id="koa-js" tabindex="-1">Koa.js <a class="header-anchor" href="#koa-js" aria-label="Permalink to &quot;Koa.js&quot;">​</a></h3><ul><li>Lightweight</li><li>Async function support</li><li>Modular design</li><li>Built by Express.js creators</li></ul><h3 id="nest-js" tabindex="-1">Nest.js <a class="header-anchor" href="#nest-js" aria-label="Permalink to &quot;Nest.js&quot;">​</a></h3><ul><li>TypeScript-based</li><li>Dependency injection</li><li>Microservices support</li><li>Angular-inspired architecture</li></ul><h2 id="database-integrations" tabindex="-1">Database Integrations <a class="header-anchor" href="#database-integrations" aria-label="Permalink to &quot;Database Integrations&quot;">​</a></h2><h3 id="mongodb-mongoose" tabindex="-1">MongoDB (Mongoose) <a class="header-anchor" href="#mongodb-mongoose" aria-label="Permalink to &quot;MongoDB (Mongoose)&quot;">​</a></h3><ul><li>NoSQL database</li><li>Object Data Modeling (ODM)</li><li>Flexible schema</li><li>Scalability</li></ul><h3 id="postgresql-sequelize" tabindex="-1">PostgreSQL (Sequelize) <a class="header-anchor" href="#postgresql-sequelize" aria-label="Permalink to &quot;PostgreSQL (Sequelize)&quot;">​</a></h3><ul><li>Relational database</li><li>Object-Relational Mapping (ORM)</li><li>Complex queries</li><li>ACID compliance</li></ul><h2 id="authentication-and-security" tabindex="-1">Authentication and Security <a class="header-anchor" href="#authentication-and-security" aria-label="Permalink to &quot;Authentication and Security&quot;">​</a></h2><ul><li>JWT (JSON Web Tokens)</li><li>Passport.js</li><li>bcrypt for password hashing</li><li>HTTPS and SSL</li><li>Input validation</li><li>Protection against common vulnerabilities</li></ul><h2 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h2><ul><li>Caching strategies</li><li>Load balancing</li><li>Clustering</li><li>Memory management</li><li>Profiling and monitoring</li></ul><h2 id="real-time-applications" tabindex="-1">Real-Time Applications <a class="header-anchor" href="#real-time-applications" aria-label="Permalink to &quot;Real-Time Applications&quot;">​</a></h2><ul><li>WebSockets</li><li>Socket.IO</li><li>Server-Sent Events</li><li>Real-time communication</li></ul><h2 id="deployment-strategies" tabindex="-1">Deployment Strategies <a class="header-anchor" href="#deployment-strategies" aria-label="Permalink to &quot;Deployment Strategies&quot;">​</a></h2><ul><li>Docker containerization</li><li>Serverless deployment</li><li>Cloud platforms (AWS, Azure, GCP)</li><li>Process managers (PM2)</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li>Use async/await</li><li>Handle errors properly</li><li>Implement logging</li><li>Write modular code</li><li>Use environment variables</li><li>Implement rate limiting</li></ol><h2 id="recommended-learning-path" tabindex="-1">Recommended Learning Path <a class="header-anchor" href="#recommended-learning-path" aria-label="Permalink to &quot;Recommended Learning Path&quot;">​</a></h2><ul><li>JavaScript fundamentals</li><li>Asynchronous programming</li><li>Choose a web framework</li><li>Learn database integration</li><li>Build real-world projects</li><li>Study system design</li></ul><h2 id="learning-resources" tabindex="-1">Learning Resources <a class="header-anchor" href="#learning-resources" aria-label="Permalink to &quot;Learning Resources&quot;">​</a></h2><ul><li>Node.js Official Documentation</li><li>NodeSchool.io</li><li>Udemy Courses</li><li>YouTube Tutorials</li><li>GitHub Open Source Projects</li></ul>',34)]))}const p=a(o,[["render",n]]);export{m as __pageData,p as default};
